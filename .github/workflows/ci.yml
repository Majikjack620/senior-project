name: CI

on:
  pull_request:
    branches: [main, master]
    types: [opened, reopened, labeled, synchronize]
  workflow_dispatch:
    
permissions:
  pull-requests: write
  contents: write
  checks: write
  issues: write
  
jobs:
    Python-Formatter:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout Repo
          uses: actions/checkout@v3
        
        - name: Python Format Review with Black
          uses: datadog/action-py-black-formatter@v2.1
          id: format_python
          
        - name: Apply Python Format Changes in PR
          if: ${{ steps.format_python.outputs.is_formatted == 'true' }}
          uses: stefanzweifel/git-auto-commit-action@v4.16.0
          with:
            commit_message: ":snake::art: Python Files reformatted to generalize convention"
            file_pattern: "*.py"
            skip_dirty_check: false
          id: apply_py_changes
          
#         - name: Comment Changes
#           if: ${{ steps.apply_py_changes.outputs.changes_detected == 'true' }}
#           run: gh pr comment "$PR_URL" -b "Python files reformatted for generalized convention"
#           env:
#             PR_URL: ${{ github.event.pull_request.html_url }}
#             GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            
    SQL-Formatter:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout Repo
          uses: actions/checkout@v3
            
        - name: SQL Format Review with sqlparse.format
          uses: credfeto/action-sql-format@v1.4.1
          id: format_sql
          
        - name: Apply SQL Format Changes in PR
          uses: stefanzweifel/git-auto-commit-action@v4.16.0
          with:
            commit_message: ":chart_with_upwards_trend::art: SQL Files reformatted to generalize convention"
            file_pattern: "*.sql"
            skip_dirty_check: false
          id: apply_sql_changes
            
#         - name: Comment Changes
#           if: ${{ steps.apply_sql_changes.outputs.changes_detected == 'true'  }}
#           run: gh pr comment "$PR_URL" -b "SQL files reformatted for generalized convention"
#           env:
#             PR_URL: ${{ github.event.pull_request.html_url }}
#             GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            
        
          

    Semantic-Release:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout Repo
          uses: actions/checkout@v3

        - name: Semantic Release
          uses: cycjimmy/semantic-release-action@v3
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
    Sonar-Analysis:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout Repo
          uses: actions/checkout@v3

        - name: SonarCloud Analysis
          uses: SonarSource/sonarcloud-github-action@master
          env:
            GITHUB_TOKEN: ${{ secrets.TOKENIZED }}
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          with:
            args:
              -Dsonar.projectKey=Majikjack620_senior-project
              -Dsonar.organization=majikjack620














## DEPENDABOT ACTIONS NOT BEING USED
  # Dependabot-PR-Assigner:
  #   runs-on: ubuntu-latest
  #   if: ${{github.actor == 'dependabot[bot]' && github.event_name == 'pull_request'}}
  #   steps:
  #     - name: Assign PR to Reviewer
  #       uses: pozil/auto-assign-issue@v1
  #       with:
  #         repo-token: ${{secrets.TOKENIZED}}
  #         assignees: Majikjack620
  #         numOfAssignee: 1
  #         allowSelfAssign: true
          
  # Dependency-Validator:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout Repo Data
  #       uses: actions/checkout@v3
        
  #     - name: Set up node
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: "18"
          
  #     - name: Set up python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: "3.10"
          
  #     - name: Upgrade npm and install dependencies
  #       run: |
  #         npm i -g npm@latest
  #         npm i -g npm-check-updates
  #         cd backend
  #         npm install
      
  #     - name: Check for outdatead dependencies
  #       run: |
  #         cd backend
  #         ncu --format group
  #         ncu --format group >> dependent.txt
  #         python file_read.py >> $GITHUB_STEP_SUMMARY
          
  #     - if: ${{github.event_name == 'pull_request'}}
  #       name: Summarizing outdated dependency list
  #       run: |
  #         cd backend
  #         python file_read.py >> comments.txt
  #         gh pr comment "$PR_URL" --body-file comments.txt
  #       env:
  #         PR_URL: ${{github.event.pull_request.html_url}}
  #         GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          
  #     - name: Pass/Fail Check
  #       run: |
  #         cd backend
  #         python check_pass_fail.py
